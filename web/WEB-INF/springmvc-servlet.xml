<beans xmlns="http://www.springframework.org/schema/beans"  
 xmlns:context="http://www.springframework.org/schema/context"  
 xmlns:p="http://www.springframework.org/schema/p"  
 xmlns:mvc="http://www.springframework.org/schema/mvc"  
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
 xmlns:task="http://www.springframework.org/schema/task"
 xsi:schemaLocation="http://www.springframework.org/schema/beans  
      http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
      http://www.springframework.org/schema/context  
      http://www.springframework.org/schema/context/spring-context.xsd  
      http://www.springframework.org/schema/mvc  
      http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
      http://www.springframework.org/schema/task 
      http://www.springframework.org/schema/task/spring-task-4.0.xsd">  
      
     <!-- 启动注解驱动的Spring MVC功能，注册请求url和注解POJO类方法的映射-->  
     <mvc:annotation-driven>
         <mvc:message-converters>
             <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                 <property name="objectMapper">
                     <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                         <!-- 处理responseBody 里面日期类型 -->
                         <property name="dateFormat">
                             <bean class="java.text.SimpleDateFormat">
                                 <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />
                             </bean>
                         </property>
                         <!-- 为null字段时不显示 -->
                         <property name="serializationInclusion">
                             <value type="com.fasterxml.jackson.annotation.JsonInclude.Include">NON_NULL</value>
                         </property>
                     </bean>
                 </property>
             </bean>
         </mvc:message-converters>
    </mvc:annotation-driven>

     <!-- 启动包扫描功能，以便注册带有@Controller、@Service、@repository、@Component等注解的类成为spring的bean -->  
     <context:component-scan base-package="cn.lee.j.eric" >
     	<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />   
   		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />  
     </context:component-scan>  
     
     <!-- 对模型视图名称的解析，在请求时模型视图名称添加前后缀 -->  
     <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" 
     	p:prefix="/WEB-INF/view/" p:suffix=".jsp" />  
     	
     <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
	p:maxUploadSize="1073741824" p:maxInMemorySize="1024" />
	
	<!-- 拦截器 -->  
    <mvc:interceptors>  
    	<mvc:interceptor>
			<mvc:mapping path="/**"/>    	<!-- 拦截所有请求 -->
	    	<bean class="cn.lee.j.eric.application.ActionInterceptor">
	    	</bean>  
    	</mvc:interceptor>
    </mvc:interceptors>
    
    <task:scheduler id="scheduler" pool-size="10" />  
    <task:executor id="executor" keep-alive="3600" pool-size="100-200" 
    queue-capacity="500" rejection-policy="CALLER_RUNS" /> 
    <task:annotation-driven executor="executor" scheduler="scheduler" />
</beans>  